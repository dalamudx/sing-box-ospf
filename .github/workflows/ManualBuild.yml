name: Manual Build Docker Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'specific version number'
        required: true
        default: 'v1.9.2'
  push:
    paths:
      - 'Dockerfile'
      
jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      # 获得仓库中的ReleaseTag

      - name: Set Version
        id: set-version
        run: |
          ReleaseTag=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases?per_page=100&page=1 | jq -r '.[] | select(.prerelease == false) | .tag_name'|grep -w '${{ github.event.inputs.version }}' || echo false )
          if [ "$ReleaseTag" != "false" ];then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "ReleaseTag=$ReleaseTag"
            echo "status=success" >> $GITHUB_OUTPUT
          fi
          PreReleaseTag=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases?per_page=100&page=1 | jq -r '.[] | select(.prerelease == true) | .tag_name'|grep -w '${{ github.event.inputs.version }}' || echo false )
          if [ "$PreReleaseTag" != "false" ];then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "PreReleaseTag=$PreReleaseTag"
            echo "pstatus=success" >> $GITHUB_OUTPUT
          fi

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.22

      - name: Compile App
        if: ${{ (steps.set-version.outputs.status == 'success') || (steps.set-version.outputs.pstatus == 'success') }}
        env:
          CGO_ENABLED: 0
        run: |
          go version
          git clone -b ${{ github.event.inputs.version }} https://github.com/SagerNet/sing-box.git
          cd sing-box
          make
          make install
          

      # Build and push release
      - name: Build dockerfile
        if: ${{ (steps.set-version.outputs.status == 'success') || (steps.set-version.outputs.pstatus == 'success') }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            dalamudx/sing-box-ospf:${{ steps.set-version.outputs.version }}
          build-args: |
            VERSION=${{ steps.set-version.outputs.version }}

  del_runs:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 6
