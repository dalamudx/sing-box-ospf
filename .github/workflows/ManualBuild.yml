name: Manual Build Docker Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'specific release version number'
        required: true
        default: ' '
      pre_version:
        description: 'specific pre-release version number'
        required: true
        default: ' '
  push:
    paths:
      - 'Dockerfile'
      
jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      # 获得仓库中的ReleaseTag
      - name: Set Version
        id: set-version
        run: |
          ReleaseTag=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases | jq -r '.[] | select(.prerelease == false) | .tag_name'|grep -w '${{ github.event.inputs.version }}' )
          if [ "$ReleaseTag" != "" ];then
            echo "::set-output name=version::${{ github.event.inputs.version }}"
            echo "::set-output name=status::success"
          PreReleaseTag=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases | jq -r '.[] | select(.prerelease == true) | .tag_name'|grep -w '${{ github.event.inputs.pre_version }}' ))
          if [ "$PreReleaseTag" != "" ];then
            echo "::set-output name=pre_version::${{ github.event.inputs.pre_version }}"
            echo "::set-output name=pstatus::success"
          echo "ReleaseTag=$ReleaseTag"
          echo "PreReleaseTag=$PreReleaseTag"
          

      # Build and push latest_release
      - name: Build dockerfile
        if: steps.set-version.outputs.status == 'success'
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            dalamudx/sing-box-ospf:${{ steps.set-version.outputs.version }}
            dalamudx/sing-box-ospf:latest
          build-args: |
            VERSION=${{ steps.set-version.outputs.version }}

      # Build and push latest_prerelease
      - name: Build PreRelease dockerfile
        if: steps.set-version.outputs.pstatus == 'success'
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            dalamudx/sing-box-ospf:${{ steps.set-version.outputs.pre_version }}
            dalamudx/sing-box-ospf:dev
          build-args: |
            VERSION=${{ steps.set-version.outputs.pre_version }}

  del_runs:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 6
