name: Manual Build Docker Image

on:
  workflow_dispatch:
    inputs:
      tag:
        default: '1.8.14'
        description: "Specific the tag you want to build"

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/sing-box-ospf

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.check-version.outputs.tag }}
      status: ${{ steps.check-version.outputs.status }}
    steps:
      - name: Check version
        id: check-version
        run: |
          TAG=v${{ github.event.inputs.tag }}
          GIT_TAG=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases?per_page=100 | jq -r '.[] | .tag_name'|grep $TAG)
          DOCKER_TAG=$(curl -s -X GET https://registry.hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/sing-box-ospf/tags/${GIT_TAG} | jq '.name')
          echo "Docker 版本: ${DOCKER_TAG}"
          echo "Git Release 版本: ${GIT_TAG}"
          if [ "${GIT_TAG}" != "" ]
          then
            if [ "${DOCKER_TAG}" == "null" ]
            then
                echo "tag=${GIT_TAG}" >> $GITHUB_OUTPUT
                echo "status=success" >> $GITHUB_OUTPUT
            else
              echo "status=fail" >> $GITHUB_OUTPUT
            fi
          else
              echo "status=fail" >> $GITHUB_OUTPUT
          fi
  build:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.status != 'fail' }}
    strategy:
      fail-fast: true
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
          - linux/386
          - linux/ppc64le
          - linux/riscv64
          - linux/s390x
    steps:
      - name: Checkout sing-box-ospf
        uses: actions/checkout@v4
        with:
          path: sing-box-ospf
      - name: Checkout sing-box
        uses: actions/checkout@v4
        with:
          repository: SagerNet/sing-box
          path: sing-box
          ref: ${{ needs.check.outputs.tag }}
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          mv sing-box-ospf/Dockerfile sing-box/Dockerfile
          mv sing-box-ospf/entrypoint.sh sing-box/entrypoint.sh
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          flavor: |
              latest=false
          tags: |
              type=raw,value=${{ needs.check.outputs.tag }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          context: ./sing-box
          build-args: |
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=1
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    if: ${{ needs.check.outputs.status != 'fail' }}
    needs:
      - build
      - check
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          flavor: |
              latest=false
          tags: |
              type=raw,value=${{ needs.check.outputs.tag }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}