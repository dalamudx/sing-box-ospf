name: Auto Build Docker Image

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */1 * * *'

env:
  REGISTRY_IMAGE: dalamudx/sing-box-ospf

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
          - linux/386
          - linux/ppc64le
          - linux/riscv64
          - linux/s390x
    steps:
      - name: Check Update
        id: check-update
        run: |
          RELEASE_TAG=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases | jq -r '.[] | select(.prerelease == false) | .tag_name' | head -n 1)
          DEV_TAG=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases | jq -r '.[] | select(.prerelease == true) | .tag_name' | head -n 1)
          DOCKER_RELEASE_TAG=$(curl -s -X GET https://registry.hub.docker.com/v2/repositories/dalamudx/sing-box-ospf/tags/${RELEASE_TAG} | jq '.name')
          DOCKER_DEV_TAG=$(curl -s -X GET https://registry.hub.docker.com/v2/repositories/dalamudx/sing-box-ospf/tags/${DEV_TAG} | jq '.name')
          echo "Docker Release 版本: ${DOCKER_RELEASE_TAG}"
          echo "Docker Dev 版本: ${DOCKER_DEV_TAG}"
          echo "Git Release 版本: ${RELEASE_TAG}"
          echo "Git Dev 版本: ${DEV_TAG}"
          if [ "${DOCKER_RELEASE_TAG}" == "null" ]
          then
            echo "tag=${RELEASE_TAG}" >> $GITHUB_OUTPUT
            echo "status=success" >> $GITHUB_OUTPUT
          elif [ "${DOCKER_DEV_TAG}" == "null" ]
          then
            echo "tag=${DEV_TAG}" >> $GITHUB_OUTPUT
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=fail" >> $GITHUB_OUTPUT
          fi
      - name: Check if branch is main
        if: steps.check-update.outputs.status == 'fail'
        cancel: true
      - name: Checkout sing-box-ospf
        uses: actions/checkout@v4
        with:
          path: sing-box-ospf
      - name: Checkout sing-box
        uses: actions/checkout@v4
        with:
          repository: SagerNet/sing-box
          path: sing-box
          ref: ${{ steps.check-update.outputs.tag }}
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          mv sing-box-ospf/Dockerfile sing-box/Dockerfile
          mv sing-box-ospf/entrypoint.sh sing-box/entrypoint.sh
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          context: ./sing-box
          build-args: |
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=1
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Get commit to build
        id: ref
        run: |-
          if [[ -z "${{ steps.check-update.outputs.tag }}" ]]; then
            ref="${{ github.ref_name }}"
          else
            ref="${{ steps.check-update.outputs.tag }}"
          fi
          echo "ref=$ref"
          echo "ref=$ref" >> $GITHUB_OUTPUT
          if [[ $ref == *"-"* ]]; then
            latest=dev
          else
            latest=latest
          fi
          echo "latest=$latest"
          echo "latest=$latest" >> $GITHUB_OUTPUT
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create \
            -t "${{ env.REGISTRY_IMAGE }}:${{ steps.ref.outputs.latest }}" \
            -t "${{ env.REGISTRY_IMAGE }}:${{ steps.ref.outputs.ref }}" \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.ref.outputs.latest }}
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.ref.outputs.ref }}